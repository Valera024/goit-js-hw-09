{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAAcJ,SAASC,cAAc,wBACrCI,EAAMN,EAAKE,cAAc,yBAG/BF,EAAKO,iBAAiB,UAEtB,SAAqBC,G,kBAOjB,IAoBmBC,EAAUC,GAAVD,EAnBLE,EAmBeD,EApBfE,EAAeD,EAAIE,EAqB5B,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACPH,EAEFF,EAAQ,CAAEN,WAAUC,UAGpBM,EAAO,CAAEP,WAAUC,S,GAElBA,E,KA7BAW,MAAK,SAAAC,G,IAAGb,EAAQa,EAARb,SAAUC,EAAKY,EAALZ,MACjBa,EAAAzB,GAAS0B,OAAOC,QAAQ,qBAAwCC,OAAnBjB,EAAW,EAAE,QAAYiB,OAANhB,EAAM,M,IAEvEiB,OAAM,SAAAL,G,IAAGb,EAAQa,EAARb,SAAUC,EAAKY,EAALZ,MAClBa,EAAAzB,GAAS0B,OAAOI,QAAQ,oBAAuCF,OAAnBjB,EAAW,EAAE,QAAYiB,OAANhB,EAAM,M,IAEtEmB,SAAQ,WACHlB,IAAMmB,EAAS,IACjBxB,EAAIyB,UAAW,EACf5B,EAAW6B,MAAQ,GACnB5B,EAAU4B,MAAQ,GAClB3B,EAAY2B,MAAQ,G,KAnB5BxB,EAAMyB,iBACN,IAAMrB,EAAesB,SAAS/B,EAAW6B,OACnCnB,EAAOqB,SAAS9B,EAAU4B,OAC1BF,EAASI,SAAS7B,EAAY2B,OACpC1B,EAAIyB,UAAW,EACf,IAAK,IAAII,EAAI,EAAGA,EAAIL,EAAQK,GAAK,EAACC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';  \n\nconst form = document.querySelector(\".form\")\nconst inputDelay = document.querySelector(\"input[name='delay']\")\nconst inputStep = document.querySelector(\"input[name='step']\")\nconst inputAmount = document.querySelector(\"input[name='amount']\")\nconst btn = form.querySelector(\"button[type='submit']\");\n\n\nform.addEventListener(\"submit\", formPromise)\n\nfunction formPromise(event) {\n  event.preventDefault();\n  const initialDelay = parseInt(inputDelay.value);\n  const step = parseInt(inputStep.value);\n  const amount = parseInt(inputAmount.value);\n  btn.disabled = true;\n  for (let i = 0; i < amount; i += 1) {\n    const delay = initialDelay + i * step;\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position + 1} in ${delay}ms`)\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position + 1} in ${delay}ms`)\n      })\n      .finally(() => {\n        if (i === amount - 1) {\n          btn.disabled = false\n          inputDelay.value = ''\n          inputStep.value = ''\n          inputAmount.value = ''\n      }\n    })\n  }\n  \n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n    if (shouldResolve) {\n      // Fulfill\n      resolve({ position, delay })\n    } else {\n      // Reject\n      reject({ position, delay })\n    }\n    }, delay)\n    })\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$inputDelay","$ce04d3a99e08e73b$var$inputStep","$ce04d3a99e08e73b$var$inputAmount","$ce04d3a99e08e73b$var$btn","addEventListener","event","position","delay","i","initialDelay","step","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","finally","amount","disabled","value","preventDefault","parseInt","i1","_loop"],"version":3,"file":"03-promises.d6fdbff3.js.map"}