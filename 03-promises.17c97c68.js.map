{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAAcJ,SAASC,cAAc,wBAsB3C,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACPH,EAEFF,EAAQ,CAAEH,WAAUC,UAGpBG,EAAO,CAAEJ,WAAUC,S,GAElBA,E,IA/BPR,EAAKgB,iBAAiB,UAEtB,SAAqBC,GACnBA,EAAMC,iBAKN,IAJA,IAAMC,EAAeC,SAASjB,EAAWkB,OACnCC,EAAOF,SAAShB,EAAUiB,OAC1BE,EAASH,SAASf,EAAYgB,OAE3BG,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAAG,CAElClB,EAAckB,EADAL,EAAeK,EAAIF,GAE9BG,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBmB,EAAA7B,GAAS8B,OAAOC,QAAQ,qBAAwCC,OAAnBvB,EAAW,EAAE,QAAYuB,OAANtB,EAAM,M,IAEvEuB,OAAM,SAAAL,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBmB,EAAA7B,GAAS8B,OAAOI,QAAQ,oBAAuCF,OAAnBvB,EAAW,EAAE,QAAYuB,OAANtB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';  \n\nconst form = document.querySelector(\".form\")\nconst inputDelay = document.querySelector(\"input[name='delay']\")\nconst inputStep = document.querySelector(\"input[name='step']\")\nconst inputAmount = document.querySelector(\"input[name='amount']\")\n\nform.addEventListener(\"submit\", formPromise)\n\nfunction formPromise(event) {\n  event.preventDefault();\n  const initialDelay = parseInt(inputDelay.value);\n  const step = parseInt(inputStep.value);\n  const amount = parseInt(inputAmount.value);\n\n  for (let i = 0; i < amount; i += 1) {\n    const delay = initialDelay + i * step;\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position + 1} in ${delay}ms`)\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position + 1} in ${delay}ms`)\n      })\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n    if (shouldResolve) {\n      // Fulfill\n      resolve({ position, delay })\n    } else {\n      // Reject\n      reject({ position, delay })\n    }\n    }, delay)\n    })\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$inputDelay","$ce04d3a99e08e73b$var$inputStep","$ce04d3a99e08e73b$var$inputAmount","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","initialDelay","parseInt","value","step","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.17c97c68.js.map"}